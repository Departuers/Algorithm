package A水题;

/**
 * Basic.HDOJ 1056
 * 你可以把卡片叠的离桌子多远,如果只有1张卡片,
 * 那么可以达到的最远距离是卡片长度的一半,
 * 如果有两张卡片,那么上面那张卡片能放的距离不超过下面那张卡片的一半
 * 下面那张卡片超出桌面的距离是卡片程度1/3
 * 所以能达到的最远距离是1/2+1/3=5/6
 * 输入:
 * 一个距离c
 * 0.01≤c≤5.20
 * 输出:
 * 能达到距离c所需要的最少卡片数量
 * 思路:n张卡片能到达的最远距离是:1/2+1/3+1/4+...+1/(n+1)
 * 最顶上的那张超出,卡片第二张1/2
 * 第二张超过第三张1/3
 * 最后一张超过桌子的1/(n+1)
 * 直接计算:1/2+1/3+1/4+...+1/(n+1)≤c
 */
public class HDOJ叠卡片1056 {
    public static void main(String[] args) {
        System.out.println(Die(1));
    }

    public static int Die(double c) {
        int i = 2;//首先是从1/2开始
        double res = 0;
        while (res < c) {//达不到c才会再加一张卡片
            res += 1.0 / i;//维护长度
            i++;//维护i
        }
        return i - 2;//分母下标与卡片张数的关系,i-2=卡片张数,非常巧妙
    }
}
