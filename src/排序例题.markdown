```
1.奇数在左
给一个整数数组，调整数组数字的位置，
使所有奇数放在数组前半部分，所有偶数位放在数组后半部分，
要求时间复杂度为O(n)

2.第K个元素，重要！！！
以高效率求出一个乱序数组中，按数值顺序的第k个元素值
思路:快排找地K个。

3. 超过一半的数/发帖水王
数组中有一个数超过了数组长度的一半，找出这个元素
思路1:排序出来，找arr.length/2，
中间那个肯定是超过数组长度一半元素
思路2:或者用上题找第K个元素，找第arr.length/2大的元素，需要改动数组的内容
思路3:消掉不同的数，将整个数组看做两类，
比如8出现次数超过数组一半，非8这一类，跟8对消，消到最后剩的肯定是那个超过一半的数
思路4:hash统计

4.发帖水王加强版
数组有一个数出现了数组长度的一半，找出这个数
思路:长度的一半说明数组长度为偶数。一般每隔一个数就是水王，那么两两不同相消除
最后会消成0，那么水王可能是最后一个元素，也可能是第一个元素。每次扫描多一个动作
和最后一个数作比较，单独计数。如果不是最后一个元素。那么水王就是留下的那个candidate。

5.最小可用ID
在非负数组中(乱序)找到最小可分配的ID，从1开始编号，数据量100万
比如，1,2,3,5,6,7最小可用id就是4。
如1,2,3,4,5最小可用ID就是6

思路1:找一个辅助数组，找到最小id,浪费空间。出现大于数组长度值跳过。
这个最垃圾，数据一大就暴毙

思路2:先排序,再找，从1开始，所以对应下标，初始i+1=1对应arr[0]是1
     * O(nlogn)也很快，次优，但1000万级别数会超过1秒

最佳思路，用快排，分治思想，求出中间元素。查看对应值
1   2   40  60  61        假设数组有序，
0   1   2   3   4        
找到索引2，本该对应3，却为4，说明左边稀疏，最小id在左边。
如果左侧稀疏。即使2的索引值为40，也不关键。它最小可用ID是1-3，因为有序。
找到索引2，如果对应了3，说明左侧都是稠密的，最小id在右边。
边界出口挺难推，能找到数组中，最后一个值对应数组下标的元素。l和r都会指向这个元素
返回l左边界+1就行了



6.合并有序数组:
给定两个排序后的数组A数组B,其中A的末端有足够的缓冲空间容纳B
编写一个方法，将B合并到A中去并排序。
思路:归并的思维，

7.排序数组中找和的因子
给定已排序数组arr和k，不重复打印arr中所有相加和为k的不降序二元组，拓展三元组
如输入arr{-8，-4,-3,0,2,3,4,5,7,8}和k=10
输出(2,8)(3,7)找到两个数之和为k，也就是10

8.需要排序的子数组
给定一个无序数组arr，求出需要排序的最短子数组长度要求O(N)
如输入arr{2,3,7,5,4,6},返回4，因为只有{7,5,4,6}需要排序
如果本身就有序就输出0,0

9.求前K个数，著名TopK问题

