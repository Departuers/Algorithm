package greedy;

import java.util.Scanner;

/**
 * 出租车费
 * 题目描述
 * 某市出租车计价规则如下：起步4公里10元，即使你的行程没超过4公里；接下来的4公里，每公里2元；之后每公里2.4元。行程的最后一段即使不到1公里，也当作1公里计费。
 * 一个乘客可以根据行程公里数合理安排坐车方式来使自己的打车费最小。
 * 例如，整个行程为16公里，乘客应该将行程分成长度相同的两部分，每部分花费18元，总共花费36元。如果坐出租车一次走完全程要花费37.2元。
 * 现在给你整个行程的公里数，请你计算坐出租车的最小花费。
 * <p>
 * 输入
 * 输入包含多组测试数据。每组输入一个正整数n（n<10000000），表示整个行程的公里数。
 * 当n=0时，输入结束。
 * <p>
 * 输出
 * 对于每组输入，输出最小花费。如果需要的话，保留一位小数。
 * <p>
 * 样例输入
 * 3
 * 9
 * 16
 * 0
 * 样例输出
 * 10
 * 20.4
 * 36
 * 思路:四公里以内10元,     单价每公里2.5
 * 4-8公里每公里2元
 * 8公里18元              单价每公里2.25
 * 八公里是极小值点,超过16公里就可以分出一段8公里,
 * 8公里之后每公里2.4元
 * 在小于16公里的时候,判断剩下的,如果在八公里以内,就按照起步价和之后四公里的价格计算,
 * 如果小于12就按2.4/公里计算,
 */
public class 出租车费 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double money = 0;
        int n = sc.nextInt();
        int r = n / 8;//能走八公里18元就走
        if (n <= 4) {
            System.out.println(10);
        } else {
            if (n % 8 > 5) {//2.4*5=12,10+2=12,在这个场景下往后这个上升更快,所以走2.4元
                money = 10 + 2 * (n % 8 - 4) + 18 * r;
            } else {
                money = 18 * r + 2.4 * (n % 8);
            }
            if (money - (int) money != 0) {
                System.out.println(String.format("%.1f", money));
            } else {
                System.out.println((int) money);
            }
        }
    }
}
