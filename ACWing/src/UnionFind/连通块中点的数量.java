package UnionFind;

/**
 * 给定一个包含n个点（编号为1~n）的无向图，初始时图中没有边。
 * 现在要进行m个操作，操作共有三种：
 * “C a b”，在点a和点b之间连一条边，a和b可能相等；
 * “Q1 a b”，询问点a和点b是否在同一个连通块中，a和b可能相等；
 * “Q2 a”，询问点a所在连通块中点的数量；
 * 输入格式
 * 第一行输入整数n和m。
 * 接下来m行，每行包含一个操作指令，指令为“C a b”，“Q1 a b”或“Q2 a”中的一种。
 * 输出格式
 * 对于每个询问指令”Q1 a b”，如果a和b在同一个连通块中，则输出“Yes”，否则输出“No”。
 * 对于每个询问指令“Q2 a”，输出一个整数表示点a所在连通块中点的数量
 * 每个结果占一行。
 * 数据范围
 * 1≤n,m≤10^5
 * 输入样例：
 * 5 5
 * C 1 2
 * Q1 1 2
 * Q2 1
 * C 2 5
 * Q2 5
 * 输出样例：
 * Yes
 * 2
 * 3
 * 分析：
 * 本题属于并查集的简单应用，要求统计出各个集合的数量。
 * 只需要维持一个数组存储每个集合的数目即可，初始cnt数组都为1，
 * 合并两个集合时将其中一个集合根节点的cnt加到另一个集合根节点的cnt上即可。
 * 拥集合维护连通块
 * 每个集合都是一颗树,只有根节点的size有意义
 */
public class 连通块中点的数量 {
    public static void main(String[] args) {

    }

    static int n;
}
