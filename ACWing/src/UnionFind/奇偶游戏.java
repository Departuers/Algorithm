package UnionFind;

/**
 *小A和小B在玩一个游戏。
 * 首先，小A写了一个由0和1组成的序列S，长度为N。
 * 然后，小B向小A提出了M个问题。
 * 在每个问题中，小B指定两个数 l 和 r，小A回答 S[l~r] 中有奇数个1还是偶数个1。
 * 机智的小B发现小A有可能在撒谎。
 * 例如，小A曾经回答过 S[1~3] 中有奇数个1， S[4~6] 中有偶数个1，现在又回答 S[1~6] 中有偶数个1，显然这是自相矛盾的。
 * 请你帮助小B检查这M个答案，并指出在至少多少个回答之后可以确定小A一定在撒谎。
 * 即求出一个最小的k，使得01序列S满足第1~k个回答，但不满足第1~k+1个回答。
 * 输入格式
 * 第一行包含一个整数N，表示01序列长度。
 * 第二行包含一个整数M，表示问题数量。
 * 接下来M行，每行包含一组问答：两个整数l和r，以及回答“even”或“odd”，用以描述S[l~r] 中有偶数个1还是奇数个1。
 * 输出格式
 * 输出一个整数k，表示01序列满足第1~k个回答，但不满足第1~k+1个回答，如果01序列满足所有回答，则输出问题总数量。
 * 数据范围
 * N≤109,M≤10000
 * 输入样例：
 * 10
 * 5
 * 1 2 even
 * 3 4 odd
 * 5 6 even
 * 1 6 even
 * 7 10 odd
 * 输出样例：
 * 3
 * 数据范围暗示离散化
 * 考虑前缀和思想,
 * 前缀和Si表示前i个数中1个个数
 * 告知我们S[l,r] 中有奇数个1等价于,S(r)-S(l-1)为奇数
 * 又等价于S(r)与S(l-1)奇偶性不同
 * 同理S[l,r] 等价于S(r)与S(l-1)奇偶性相同.
 * 把询问变成了询问,两个数奇偶性相同还是奇偶性不同
 * 食物链有三类简化版,
 * 奇偶性没有矛盾是否等价于该问题是否无矛盾
 */
public class 奇偶游戏 {
    public static void main(String[] args) {

    }
}
