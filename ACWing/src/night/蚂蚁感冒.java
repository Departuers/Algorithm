package night;

/**
 * 长 100 厘米的细长直杆子上有 n 只蚂蚁。它们的头有的朝左，有的朝右。
 * 每只蚂蚁都只能沿着杆子向前爬，速度是 1 厘米/秒。
 * 当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。
 * 这些蚂蚁中，有 1 只蚂蚁感冒了。
 * 并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。
 * 请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。
 * 输入格式
 * 第一行输入一个整数 n, 表示蚂蚁的总数。
 * 接着的一行是 n 个用空格分开的整数 Xi, Xi 的绝对值表示蚂蚁离开杆子左边端点的距离。
 * 正值表示头朝右，负值表示头朝左，数据中不会出现 0 值，也不会出现两只蚂蚁占用同一位置。
 * 其中，第一个数据代表的蚂蚁感冒了。
 * 输出格式
 * 输出1个整数，表示最后感冒蚂蚁的数目。
 * 数据范围
 * 1<n<50,
 * 0<|Xi|<100
 * 输入样例1：
 * 3
 * 5 -2 8
 * 输出样例1：
 * 1
 * 输入样例2：
 * 5
 * -10 8 -20 12 25
 * 输出样例2：
 * 3
 * 首先我们必须要明白两只蚂蚁相撞掉头可以看作时一只蚂蚁穿过了另一只蚂蚁，
 * 因为相撞之后两只蚂蚁都感冒了，掉不掉头其实无所谓，毕竟都感冒了，
 * 这样的话这题就简单多了。我们先不考虑特殊情况，先来看看一般情况：
 * 第一只蚂蚁不管方向朝哪里，只要它右边的蚂蚁向左走就可能碰撞感染，
 * 同样，第一只蚂蚁左边的蚂蚁只要朝右边走也可能被感染，
 * 这样就很容易得到ans=right+left+1
 * 这里leftleft表示左边蚂蚁向右走的数量，rightright表示右边蚂蚁向左走的数量，
 * 11是指第一只蚂蚁本身。
 * 还有一种特殊情况，就是当第一只蚂蚁向左走的时候，
 * 如果第一只蚂蚁左边没有向右爬行的蚂蚁，由于爬行速度相同，
 * 所以不管第一只蚂蚁右边有多少向左爬行的，其右边的蚂蚁永远不可能被感染。
 * 同理，当第一只蚂蚁向右走的时候，如果第一只蚂蚁右边没有向左爬行的蚂蚁，
 * 其左边也永远不可能感染。
 *
 */
public class 蚂蚁感冒 {
    public static void main(String[] args) {

    }
}
